{"ast":null,"code":"import { firestore } from './config.ts';\nimport { addDoc, collection, doc, getDocs, deleteDoc } from 'firebase/firestore';\nexport async function firestoreReadText(callback) {\n  try {\n    var list = [];\n    const querySnapshot = await getDocs(collection(firestore, \"task\"));\n    querySnapshot.forEach(doc => {\n      if (doc.exists) {\n        list.push({\n          id: doc.id,\n          data: doc.data()\n        });\n      } else {\n        // this.setState({user: null});\n        console.log(\"No data\");\n      }\n    });\n    callback(list, null);\n  } catch (err) {\n    callback([], err);\n  }\n}\nexport async function firestoreDeleteText(id, callback) {\n  try {\n    await deleteDoc(doc(firestore, \"task\", id));\n    callback(null);\n  } catch (err) {\n    callback(err);\n  }\n}\nexport async function firestoreAddText(myText) {\n  const docRef = await addDoc(collection(firestore, \"task\"), {\n    text: myText\n  });\n  console.log(`Add ${docRef.id} to the database`);\n}","map":{"version":3,"names":["firestore","addDoc","collection","doc","getDocs","deleteDoc","firestoreReadText","callback","list","querySnapshot","forEach","exists","push","id","data","console","log","err","firestoreDeleteText","firestoreAddText","myText","docRef","text"],"sources":["/Users/eloyyeluo/projects/todolist/todolist/src/FirebaseAPI.ts"],"sourcesContent":["import {firestore} from './config.ts';\nimport { addDoc, collection, setDoc, doc, getDocs, getDoc, where, endAt, startAt, deleteDoc, updateDoc, arrayUnion, arrayRemove } from 'firebase/firestore';\n\nexport async function firestoreReadText(callback) {\n    try {\n        var list = []\n        const querySnapshot = await getDocs(collection(firestore, \"task\"));\n        querySnapshot.forEach((doc) => {\n            if (doc.exists) {\n                list.push({id:doc.id, data:doc.data()})\n            } else {\n                // this.setState({user: null});\n                console.log(\"No data\");\n            }\n        })\n        callback(list, null)\n    } catch(err) {\n        callback([], err)\n    }\n}\n\nexport async function firestoreDeleteText(id, callback) {\n    try {\n        await deleteDoc(doc(firestore, \"task\", id));\n        callback(null)\n    } catch(err) {\n        callback(err)\n    }\n}\n\nexport async function firestoreAddText(myText) {\n    const docRef = await addDoc(collection(firestore, \"task\"), {\n        text: myText\n      });\n      console.log(`Add ${docRef.id} to the database`);\n}\n\n"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAAqCC,GAArC,EAA0CC,OAA1C,EAAkFC,SAAlF,QAAuI,oBAAvI;AAEA,OAAO,eAAeC,iBAAf,CAAiCC,QAAjC,EAA2C;EAC9C,IAAI;IACA,IAAIC,IAAI,GAAG,EAAX;IACA,MAAMC,aAAa,GAAG,MAAML,OAAO,CAACF,UAAU,CAACF,SAAD,EAAY,MAAZ,CAAX,CAAnC;IACAS,aAAa,CAACC,OAAd,CAAuBP,GAAD,IAAS;MAC3B,IAAIA,GAAG,CAACQ,MAAR,EAAgB;QACZH,IAAI,CAACI,IAAL,CAAU;UAACC,EAAE,EAACV,GAAG,CAACU,EAAR;UAAYC,IAAI,EAACX,GAAG,CAACW,IAAJ;QAAjB,CAAV;MACH,CAFD,MAEO;QACH;QACAC,OAAO,CAACC,GAAR,CAAY,SAAZ;MACH;IACJ,CAPD;IAQAT,QAAQ,CAACC,IAAD,EAAO,IAAP,CAAR;EACH,CAZD,CAYE,OAAMS,GAAN,EAAW;IACTV,QAAQ,CAAC,EAAD,EAAKU,GAAL,CAAR;EACH;AACJ;AAED,OAAO,eAAeC,mBAAf,CAAmCL,EAAnC,EAAuCN,QAAvC,EAAiD;EACpD,IAAI;IACA,MAAMF,SAAS,CAACF,GAAG,CAACH,SAAD,EAAY,MAAZ,EAAoBa,EAApB,CAAJ,CAAf;IACAN,QAAQ,CAAC,IAAD,CAAR;EACH,CAHD,CAGE,OAAMU,GAAN,EAAW;IACTV,QAAQ,CAACU,GAAD,CAAR;EACH;AACJ;AAED,OAAO,eAAeE,gBAAf,CAAgCC,MAAhC,EAAwC;EAC3C,MAAMC,MAAM,GAAG,MAAMpB,MAAM,CAACC,UAAU,CAACF,SAAD,EAAY,MAAZ,CAAX,EAAgC;IACvDsB,IAAI,EAAEF;EADiD,CAAhC,CAA3B;EAGEL,OAAO,CAACC,GAAR,CAAa,OAAMK,MAAM,CAACR,EAAG,kBAA7B;AACL"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/eloyyeluo/projects/todolist/todolist/src/TaskRow.js\";\nimport { Checkbox } from '';\nimport { firestoreDelete } from './FirebaseAPI';\nimport FormGroup from '@mui/material/FormGroup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar currentID;\n\nconst handleChange = () => {\n  // delete the current task from datastore\n  var error;\n  firestoreDelete(currentID, err => {\n    error = err;\n  });\n\n  if (error != null) {\n    return error;\n  }\n};\n\nconst TaskRow = props => {\n  currentID = props.id;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 40\n        }, this),\n        onChange: handleChange,\n        label: props.displayText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_c = TaskRow;\nexport default TaskRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskRow\");","map":{"version":3,"names":["Checkbox","firestoreDelete","FormGroup","currentID","handleChange","error","err","TaskRow","props","id","displayText"],"sources":["/Users/eloyyeluo/projects/todolist/todolist/src/TaskRow.js"],"sourcesContent":["import {Checkbox} from ''\nimport {firestoreDelete} from './FirebaseAPI'\nimport FormGroup from '@mui/material/FormGroup';\n\nvar currentID;\n\nconst handleChange = () => {\n    // delete the current task from datastore\n    var error;\n    firestoreDelete(currentID, (err) => {\n        error = err;\n    })\n    if (error != null) {\n        return error;\n    }\n};\n\nconst TaskRow = (props) => {\n    currentID = props.id;\n    return (\n        <div>\n            <FormGroup>\n            <FormControlLabel control={<Checkbox/>} onChange={handleChange} label={props.displayText} />\n            </FormGroup>\n        </div>\n    )\n}\n\nexport default TaskRow;"],"mappings":";AAAA,SAAQA,QAAR,QAAuB,EAAvB;AACA,SAAQC,eAAR,QAA8B,eAA9B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,IAAIC,SAAJ;;AAEA,MAAMC,YAAY,GAAG,MAAM;EACvB;EACA,IAAIC,KAAJ;EACAJ,eAAe,CAACE,SAAD,EAAaG,GAAD,IAAS;IAChCD,KAAK,GAAGC,GAAR;EACH,CAFc,CAAf;;EAGA,IAAID,KAAK,IAAI,IAAb,EAAmB;IACf,OAAOA,KAAP;EACH;AACJ,CATD;;AAWA,MAAME,OAAO,GAAIC,KAAD,IAAW;EACvBL,SAAS,GAAGK,KAAK,CAACC,EAAlB;EACA,oBACI;IAAA,uBACI,QAAC,SAAD;MAAA,uBACA,QAAC,gBAAD;QAAkB,OAAO,eAAE,QAAC,QAAD;UAAA;UAAA;UAAA;QAAA,QAA3B;QAAwC,QAAQ,EAAEL,YAAlD;QAAgE,KAAK,EAAEI,KAAK,CAACE;MAA7E;QAAA;QAAA;QAAA;MAAA;IADA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAOH,CATD;;KAAMH,O;AAWN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}
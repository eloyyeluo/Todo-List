{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createContext, useContext } from \"react\";\nimport { autorun, makeAutoObservable } from \"mobx\";\nimport { firestoreReadText } from \"./FirebaseAPI.ts\";\n\nclass Datastore {\n  constructor() {\n    makeAutoObservable(this);\n    taskList = [];\n  }\n\n  resetList() {\n    this.taskList = [];\n  }\n\n  addToList(id, text) {\n    task = {\n      id: id,\n      text: text\n    };\n    this.taskList.push(task);\n    console.log(`add task: ${task}`);\n  }\n\n  fetchLatestList() {\n    resetList();\n    firestoreReadText((id, text, err) => {\n      this.addToList({\n        id: id,\n        text: text\n      });\n    });\n  }\n\n}\n\nexport const rootStore = new RootStore();\nexport const StoreContext = /*#__PURE__*/createContext(rootStore);\nexport const StoreProvider = StoreContext.Provider;\nexport const useRootStore = () => {\n  _s();\n\n  return useContext(StoreContext);\n};\n\n_s(useRootStore, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");","map":{"version":3,"names":["React","ReactDOM","createContext","useContext","autorun","makeAutoObservable","firestoreReadText","Datastore","constructor","taskList","resetList","addToList","id","text","task","push","console","log","fetchLatestList","err","rootStore","RootStore","StoreContext","StoreProvider","Provider","useRootStore"],"sources":["/Users/eloyyeluo/projects/todolist/todolist/src/Datastore.js"],"sourcesContent":["import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { createContext, useContext } from \"react\";\nimport { autorun, makeAutoObservable } from \"mobx\";\nimport { firestoreReadText } from \"./FirebaseAPI.ts\";\n\nclass Datastore {\n    taskList\n    constructor() {\n        makeAutoObservable(this);\n        taskList = [];\n    }\n    resetList() {\n        this.taskList = [];\n    }\n    addToList(id, text) {\n        task = {id:id, text:text}\n        this.taskList.push(task);\n        console.log(`add task: ${task}`);\n    }\n    fetchLatestList() {\n        resetList();\n        firestoreReadText((id, text, err) => {\n            this.addToList({id:id, text:text});\n        });\n    }\n}\nexport const rootStore = new RootStore()\n\nexport const StoreContext = createContext(rootStore)\nexport const StoreProvider = StoreContext.Provider\nexport const useRootStore = () => useContext(StoreContext)\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;AACA,SAASC,OAAT,EAAkBC,kBAAlB,QAA4C,MAA5C;AACA,SAASC,iBAAT,QAAkC,kBAAlC;;AAEA,MAAMC,SAAN,CAAgB;EAEZC,WAAW,GAAG;IACVH,kBAAkB,CAAC,IAAD,CAAlB;IACAI,QAAQ,GAAG,EAAX;EACH;;EACDC,SAAS,GAAG;IACR,KAAKD,QAAL,GAAgB,EAAhB;EACH;;EACDE,SAAS,CAACC,EAAD,EAAKC,IAAL,EAAW;IAChBC,IAAI,GAAG;MAACF,EAAE,EAACA,EAAJ;MAAQC,IAAI,EAACA;IAAb,CAAP;IACA,KAAKJ,QAAL,CAAcM,IAAd,CAAmBD,IAAnB;IACAE,OAAO,CAACC,GAAR,CAAa,aAAYH,IAAK,EAA9B;EACH;;EACDI,eAAe,GAAG;IACdR,SAAS;IACTJ,iBAAiB,CAAC,CAACM,EAAD,EAAKC,IAAL,EAAWM,GAAX,KAAmB;MACjC,KAAKR,SAAL,CAAe;QAACC,EAAE,EAACA,EAAJ;QAAQC,IAAI,EAACA;MAAb,CAAf;IACH,CAFgB,CAAjB;EAGH;;AAnBW;;AAqBhB,OAAO,MAAMO,SAAS,GAAG,IAAIC,SAAJ,EAAlB;AAEP,OAAO,MAAMC,YAAY,gBAAGpB,aAAa,CAACkB,SAAD,CAAlC;AACP,OAAO,MAAMG,aAAa,GAAGD,YAAY,CAACE,QAAnC;AACP,OAAO,MAAMC,YAAY,GAAG;EAAA;;EAAA,OAAMtB,UAAU,CAACmB,YAAD,CAAhB;AAAA,CAArB;;GAAMG,Y"},"metadata":{},"sourceType":"module"}